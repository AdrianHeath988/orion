name: Build and Publish

on:
  push:
    branches: [main, dev]
  pull_request:

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest, arch: "x64"}
          - {os: windows-latest, arch: "x64"}
          - {os: macos-latest, arch: "x64"}
          - {os: macos-latest, arch: "arm64"}
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup build environment
        uses: ./.github/actions/setup-environment
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.config.arch }}
      
      - name: Install Poetry
        shell: bash -l {0}
        run: |
          pip install poetry
      
      - name: Build package
        shell: bash -l {0}
        run: |
          poetry build

      - name: Convert to manylinux wheel
        if: matrix.config.os == 'ubuntu-latest'
        uses: ./.github/actions/convert-to-manylinux
        with:
          wheel-dir: dist
          platform: manylinux2014_x86_64
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: >-
            wheels-${{ matrix.config.os }}-py${{ matrix.python-version }}-${{ matrix.config.arch }}
          path: dist/*.whl

  test:
    needs: build
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest, arch: "x64"}
          - {os: windows-latest, arch: "x64"}
          - {os: macos-latest, arch: "x64"}
          - {os: macos-latest, arch: "arm64"}
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup test environment
        uses: ./.github/actions/setup-environment
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.config.arch }}
      
      - name: Install Tox
        shell: bash -l {0}
        run: |
          pip install tox tox-conda tox-gh-actions
      
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: >-
            wheels-${{ matrix.config.os }}-py${{ matrix.python-version }}-${{ matrix.config.arch }}
          path: dist
      
      - name: Install wheel
        shell: bash -l {0}
        run: |
          pip install --find-links=dist orion-fhe
      
      - name: Run tests with Tox
        shell: bash -l {0}
        run: tox
        working-directory: .

  publish:
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist/
          merge-multiple: true
      
      - name: List files to publish
        run: find dist -type f | sort
      
      - name: Publish to TestPyPI
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi ${{ secrets.PYPI_API_TOKEN }}
          poetry publish --repository testpypi --skip-existing