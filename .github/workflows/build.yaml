name: Build and Publish

on:
  push:
    branches: [main, dev]
  pull_request:

permissions:
  contents: write

jobs:
  build-manylinux:
    runs-on: ubuntu-latest
    container:
      image: quay.io/pypa/manylinux_2_28_x86_64
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
            
      - name: Build with manylinux action
        uses: ./.github/actions/build-manylinux
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist/*.whl

  # build-other:
  #   runs-on: ${{ matrix.config.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       config:
  #         - {os: windows-latest, arch: "x64"}
  #         - {os: macos-latest, arch: "x64"}
  #         - {os: macos-latest, arch: "arm64"}
  #       python-version: ["3.9", "3.10", "3.11", "3.12"]
    
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
      
  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #         architecture: ${{ matrix.config.arch }}
      
  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: '1.21.x'
      
  #     - name: Install UV
  #       run: |
  #         pip install uv
      
  #     - name: Build package
  #       run: |
  #         python setup.py build # generates .so/dylib/dll file first
  #         uv build --sdist --wheel --out-dir dist
      
  #     - name: Upload wheels
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: >-
  #           wheels-${{ matrix.config.os }}-py${{ matrix.python-version }}-${{ matrix.config.arch }}
  #         path: dist/*.whl

  # test:
  #   needs: [build-manylinux, build-other]
  #   runs-on: ${{ matrix.config.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       config:
  #         - {os: ubuntu-latest, arch: "x64"}
  #         - {os: windows-latest, arch: "x64"}
  #         - {os: macos-latest, arch: "x64"}
  #         - {os: macos-latest, arch: "arm64"}
  #       python-version: ["3.9", "3.10", "3.11", "3.12"]
    
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
      
  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #         architecture: ${{ matrix.config.arch }}
      
  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: '1.21.x'
      
  #     - name: Install UV and pytest
  #       run: |
  #         pip install uv pytest pytest-cov
      
  #     - name: Download wheels
  #       uses: actions/download-artifact@v4
  #       with:
  #         pattern: wheels-*
  #         path: dist/
  #         merge-multiple: true
      
  #     - name: Install wheel
  #       run: |
  #         uv pip install --find-links=dist orion-fhe
      
  #     - name: Run tests
  #       run: pytest tests/

  # publish:
  #   needs: [test]
  #   runs-on: ${{ matrix.config.os }}
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       config:
  #         - {os: ubuntu-latest, arch: "x64"}
  #         - {os: windows-latest, arch: "x64"}
  #         - {os: macos-latest, arch: "x64"}
  #         - {os: macos-latest, arch: "arm64"}
  #       python-version: ["3.9", "3.10", "3.11", "3.12"]
    
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
      
  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #         architecture: ${{ matrix.config.arch }}
      
  #     - name: Install UV
  #       run: pip install uv
      
  #     - name: Download all artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         pattern: wheels-*
  #         path: dist/
  #         merge-multiple: true
      
  #     - name: List files to publish
  #       run: find dist -type f | sort
      
  #     - name: Publish to TestPyPI
  #       run: |
  #         uv pip install twine
  #         python -m twine upload --repository testpypi --username __token__ --password ${{ secrets.PYPI_API_TOKEN }} --skip-existing dist/*