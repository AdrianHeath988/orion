name: Build and Publish

on:
  push:
    branches: [main, dev]
  pull_request:

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # Add windows-latest, macos-latest when ready
        python-version: ["3.10"] # Add 3.11, 3.12, 3.13 when ready
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install cibuildwheel
        run: pip install cibuildwheel
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'
      
      - name: Build wheels
        env:
          CIBW_BUILD: cp${{ matrix.python-version == '3.10' && '310' || matrix.python-version == '3.11' && '311' || matrix.python-version == '3.12' && '312' || '313' }}-*
          CIBW_ARCHS_LINUX: x86_64
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          GOFLAGS: '-buildvcs=false'
        run: python -m cibuildwheel --output-dir dist
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*.whl

  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # Add windows-latest, macos-latest when ready
        python-version: ["3.10"] # Add 3.11, 3.12, 3.13 when ready
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install Tox
        run: pip install tox tox-conda tox-gh-actions
      
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist
      
      - name: Install wheel
        run: pip install --find-links=dist orion-fhe
      
      - name: Run tests with Tox
        run: tox
        working-directory: .

  publish:
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist/
          merge-multiple: true
      
      - name: List files to publish
        run: find dist -type f | sort
      
      - name: Publish to TestPyPI
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi ${{ secrets.PYPI_API_TOKEN }}
          poetry publish --repository testpypi --skip-existing