name: 'Convert to manylinux'
description: 'Converts a Linux wheel to a manylinux-compatible wheel'

inputs:
  wheel-dir:
    description: 'Directory containing the wheel files'
    required: false
    default: 'dist'
  platform:
    description: 'Target manylinux platform'
    required: false
    default: 'manylinux2014_x86_64'
  keep-original:
    description: 'Keep the original wheel file'
    required: false
    default: 'false'

runs:
  using: composite
  steps:
    - name: Convert to manylinux wheel
      shell: bash -l {0}
      run: |
        # Install tool
        pip install auditwheel

        # Find any wheel that is not already manylinux
        WHEEL_PATHS=$(find ${{ inputs.wheel-dir }} -name "*.whl" | grep -v "manylinux" || echo "")
        
        # Skip if no wheel found
        if [ -z "$WHEEL_PATHS" ]; then
          echo "No non-manylinux wheels found, skipping conversion"
          exit 0
        fi
        
        # Create temporary directory for manylinux wheels
        TMP_DIR="${{ inputs.wheel-dir }}/manylinux"
        mkdir -p "$TMP_DIR"
        
        # Process each wheel
        for WHEEL_PATH in $WHEEL_PATHS; do
          echo "Converting $WHEEL_PATH to ${{ inputs.platform }}"
          
          # Repair wheel to manylinux standard
          auditwheel repair "$WHEEL_PATH" \
            --plat ${{ inputs.platform }} \
            -w "$TMP_DIR" || {
              echo "Warning: auditwheel repair failed for $WHEEL_PATH"
              continue
            }
            
          # Check if conversion was successful
          MANYLINUX_WHEEL=$(find "$TMP_DIR" -name "*.whl" -newer "$WHEEL_PATH" | head -1)
          if [ -n "$MANYLINUX_WHEEL" ]; then
            echo "Successfully converted to: $MANYLINUX_WHEEL"
            # Move the manylinux wheel to the original directory
            mv "$MANYLINUX_WHEEL" ${{ inputs.wheel-dir }}/
            
            # Remove the original wheel if not keeping it
            if [ "${{ inputs.keep-original }}" != "true" ]; then
              echo "Removing original wheel: $WHEEL_PATH"
              rm "$WHEEL_PATH"
            fi
          else
            echo "No manylinux wheel was produced for $WHEEL_PATH"
          fi
        done
        
        # Clean up
        rmdir "$TMP_DIR" 2>/dev/null || true
        
        # List final wheels
        echo "Final wheels in ${{ inputs.wheel-dir }}:"
        ls -la ${{ inputs.wheel-dir }}/*.whl || echo "No wheels found"